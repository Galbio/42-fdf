==2801== Memcheck, a memory error detector
==2801== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2801== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==2801== Command: ./fdf test.fdf
==2801== 
==2801== Syscall param writev(vector[0]) points to uninitialised byte(s)
==2801==    at 0x4BC7864: writev (writev.c:26)
==2801==    by 0x4CBEACA: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==2801==    by 0x4CBEC4E: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==2801==    by 0x4CBFD7E: xcb_writev (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==2801==    by 0x48A50B8: _XSend (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==2801==    by 0x48AA148: _XReadEvents (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==2801==    by 0x48AA52B: XWindowEvent (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==2801==    by 0x10F775: mlx_int_wait_first_expose (in /root/42-fdf/fdf)
==2801==    by 0x10F495: mlx_new_window (in /root/42-fdf/fdf)
==2801==    by 0x10ADD4: init_mlx (init.c:34)
==2801==    by 0x10ACB8: main (main.c:91)
==2801==  Address 0x4d1df4c is 28 bytes inside a block of size 16,384 alloc'd
==2801==    at 0x484D953: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2801==    by 0x489442D: XOpenDisplay (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==2801==    by 0x10F246: mlx_init (in /root/42-fdf/fdf)
==2801==    by 0x10ADAA: init_mlx (init.c:33)
==2801==    by 0x10ACB8: main (main.c:91)
==2801== 
==2801== 
==2801== HEAP SUMMARY:
==2801==     in use at exit: 0 bytes in 0 blocks
==2801==   total heap usage: 227 allocs, 227 frees, 109,496 bytes allocated
==2801== 
==2801== All heap blocks were freed -- no leaks are possible
==2801== 
==2801== Use --track-origins=yes to see where uninitialised values come from
==2801== For lists of detected and suppressed errors, rerun with: -s
==2801== ERROR SUMMARY: 3492 errors from 3 contexts (suppressed: 0 from 0)
